# Spring Boot recommendation
# According to: https://spring.io/guides/gs/accessing-data-mysql/
#
# It is good security practice that after your database is in production
# state, you make this none and revoke all privileges from the MySQL
# user connected to the Spring application, then give him only SELECT,
# UPDATE, INSERT, DELETE.
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=jdbc:mysql://localhost:3306/db_example
spring.datasource.username=springuser
spring.datasource.password=springuser

# Database - data initialization
spring.jpa.generate-ddl=true
# Show or not log for each sql query
spring.jpa.show-sql=true

# Redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=redis
spring.redis.database=0
